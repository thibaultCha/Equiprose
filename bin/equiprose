#!/usr/bin/env node
var program = require('commander')
var pjson   = require('../package.json')
var cli     = require('../lib')

process.on('uncaughtException', function (err) {
  cli.logger.error(err.message)
  process.exit(1)
})

var commands = [
  {
    name: 'create',
    cmd: 'create [path]',
    desc: 'Create a new website at given path',
    func: cli.create
  },
  {
    name: 'build',
    cmd: 'build [path]',
    desc: 'Compile a website to its buildDir',
    func: cli.build
  },
  {
    name: 'serve',
    cmd: 'serve [path] [options]',
    desc: 'Start a server on localhost:port and watch changes',
    func: cli.serve
  },
  {
    name: 'new',
    cmd: 'new <page|post> [path]',
    desc: 'Create a new post or page',
    func: cli.file
  },
  {
    name: 'about',
    cmd: 'about',
    desc: 'About Equiprose',
    func: cli.about
  }
]

program
  .version(pjson.version)

commands.forEach(function (command) {
  program
    .command(command.cmd)
    .description(command.desc)
    .action(command.func)
})

program.option('-p, --port [port]', 'Specify the port on which to run the test server')

program.on('--help', function () {
  cli.logger.log('  Examples:')
  cli.logger.log('')
  cli.logger.log('    $ equiprose create ~/website')
  cli.logger.log('    $ equiprose new post ~/website')
  cli.logger.log('    $ equiprose serve ~/website -p 9000')
  cli.logger.log('')
})

program.parse(process.argv)

if (program.rawArgs.length < 3) {
  program.help()
}

var filtered = commands.filter(function (command) {
  return process.argv[2] === command.name
})

if (filtered.length === 0) {
  cli.logger.log('  Invalid command: ' + process.argv[2])
  program.help()
}
